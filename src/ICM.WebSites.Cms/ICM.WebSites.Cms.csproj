<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <Nullable>enable</Nullable>
        <ImplicitUsings>enable</ImplicitUsings>
        <LangVersion>latest</LangVersion>
        <RootNamespace>ICM.WebSites.Cms</RootNamespace>
    </PropertyGroup>

    <PropertyGroup>
        <SpaRoot>frontend\</SpaRoot>
        <SpaClientUrl>http://localhost:44400</SpaClientUrl>
        <SpaLaunchCommand>vite</SpaLaunchCommand>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.8.0-2.final" />
        <PackageReference Include="NWebsec.AspNetCore.Middleware" Version="3.0.0" />
        <PackageReference Include="Umbraco.Cms" Version="12.3.0-rc" />
        <PackageReference Include="uSync" Version="12.2.0" />
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <None Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
        <Content Remove="obj\**" />
        <None Remove="obj\**" />
    </ItemGroup>

    <Target Name="DebugEnsurePnpm" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('frontend\node_modules') ">
        <!-- Ensure pnpm is installed -->
        <Exec Command="pnpm --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="pnpm is equired to build and run this project. To continue, please install pnpm from https://pnpm.io/installation, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'pnpm'. This may take several minutes..." />
        <Exec WorkingDirectory="frontend" Command="pnpm install" />
    </Target>

    <Target Name="PublishRunVite" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
<!--        <Exec WorkingDirectory="$(SpaRoot)" Command="pnpm install" />-->
<!--        <Exec WorkingDirectory="$(SpaRoot)" Command="pnpm run build &#45;&#45; &#45;&#45;configuration production" />-->

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
        <ItemGroup>
            <DistFiles Include="wwwroot\media\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>wwwroot\media\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>

    </Target>
    <ItemGroup>
        <ProjectReference Include="..\ICM.WebSites.Application\ICM.WebSites.Application.csproj" />
        <ProjectReference Include="..\ICM.WebSites.Domain\ICM.WebSites.Domain.csproj" />
        <ProjectReference Include="..\ICM.WebSites.Infrastructure\ICM.WebSites.Infrastructure.csproj" />
    </ItemGroup>

    <ItemGroup>
        <!-- Opt-in to app-local ICU to ensure consistent globalization APIs across different platforms -->
        <PackageReference Include="Microsoft.ICU.ICU4C.Runtime" Version="72.1.0.3" />
        <RuntimeHostConfigurationOption Include="System.Globalization.AppLocalIcu" Value="68.2.0.9" Condition="$(RuntimeIdentifier.StartsWith('linux')) or $(RuntimeIdentifier.StartsWith('win')) or ('$(RuntimeIdentifier)' == '' and !$([MSBuild]::IsOSPlatform('osx')))" />
    </ItemGroup>

    <ItemGroup>
        <Content Update="Views\EmailTemplateMarketNews.cshtml">
            <DependentUpon>EmailTemplate.cshtml</DependentUpon>
        </Content>
    </ItemGroup>

    <ItemGroup>
        <Compile Remove="wwwroot\media\**" />
        <Compile Remove="obj\**" />
    </ItemGroup>

    <ItemGroup>
        <EmbeddedResource Remove="wwwroot\media\**" />
        <EmbeddedResource Remove="obj\**" />
    </ItemGroup>

    <PropertyGroup>
        <!-- Razor files are needed for the backoffice to work correctly -->
        <CopyRazorGenerateFilesToPublishDirectory>true</CopyRazorGenerateFilesToPublishDirectory>
    </PropertyGroup>

    <PropertyGroup>
        <!-- Remove RazorCompileOnBuild and RazorCompileOnPublish when not using ModelsMode InMemoryAuto -->
        <RazorCompileOnBuild>true</RazorCompileOnBuild>
        <RazorCompileOnPublish>true</RazorCompileOnPublish>
    </PropertyGroup>

</Project>
